/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CTMaticContract,
  CTMaticContractInterface,
} from "../../../contracts/MumbaiCTcontract.sol/CTMaticContract";

const _abi = [
  {
    inputs: [],
    name: "Insufficient_Balance",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Zero_Amount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "BuyOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "SellOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "receivedTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensToDistributePerUser",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "fundedSubscriberCount",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "fundedSubscribers",
        type: "address[]",
      },
    ],
    name: "logDisperce",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_address",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_amount",
        type: "bytes32",
      },
    ],
    name: "bytes32ToUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "source",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Log",
        name: "log",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkLog",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
    ],
    name: "convertExactMaticToToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "convertTokenToMatic",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "estimateMaticforToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "MaticAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "estimateTokenForMatic",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeTradeAndDisperce",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "quoter",
    outputs: [
      {
        internalType: "contract IQuoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapHelper",
        type: "address",
      },
    ],
    name: "setSwapHelper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscribe",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriberCount",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapHelper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506128c7806100206000396000f3fe60806040526004361061010d5760003560e01c806363e3e91911610095578063c6bbd5a711610064578063c6bbd5a714610365578063d73cd47f14610390578063ddcd5220146103b9578063e95ca457146103f6578063ef352bbe1461042657610114565b806363e3e919146102e4578063735de9f7146103005780638f449a051461032b578063af84ac821461033557610114565b80632e1a7d4d116100dc5780632e1a7d4d146101fb57806340691db4146102245780634585e33b14610262578063500006b51461028b5780635ced058e146102a757610114565b80630103c92b1461011957806301a1ef86146101565780630fc6a11c1461019357806327e235e3146101be57610114565b3661011457005b600080fd5b34801561012557600080fd5b50610140600480360381019061013b9190611907565b610451565b60405161014d919061194d565b60405180910390f35b34801561016257600080fd5b5061017d60048036038101906101789190611994565b61049a565b60405161018a919061194d565b60405180910390f35b34801561019f57600080fd5b506101a86106b0565b6040516101b591906119e3565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190611907565b6106d6565b6040516101f2919061194d565b60405180910390f35b34801561020757600080fd5b50610222600480360381019061021d91906119fe565b6106ee565b005b34801561023057600080fd5b5061024b60048036038101906102469190611b96565b61086d565b604051610259929190611ca8565b60405180910390f35b34801561026e57600080fd5b5061028960048036038101906102849190611d38565b61090c565b005b6102a560048036038101906102a09190611907565b610932565b005b3480156102b357600080fd5b506102ce60048036038101906102c99190611dbb565b610bb8565b6040516102db91906119e3565b60405180910390f35b6102fe60048036038101906102f99190611de8565b610bc5565b005b34801561030c57600080fd5b50610315610e6b565b6040516103229190611e87565b60405180910390f35b610333610e83565b005b61034f600480360381019061034a9190611994565b610fae565b60405161035c919061194d565b60405180910390f35b34801561037157600080fd5b5061037a611067565b6040516103879190611ec3565b60405180910390f35b34801561039c57600080fd5b506103b760048036038101906103b29190611907565b61107f565b005b3480156103c557600080fd5b506103e060048036038101906103db9190611dbb565b6110c3565b6040516103ed919061194d565b60405180910390f35b610410600480360381019061040b9190611994565b6110d0565b60405161041d919061194d565b60405180910390f35b34801561043257600080fd5b5061043b611189565b6040516104489190611efa565b60405180910390f35b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008083116104de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d590611f72565b60405180910390fd5b6104ea8233308661119a565b6105098273e592427a0aece92de3edee1f18e0157c05861564856112f2565b60006040518061010001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001739c3c9283d3e44854697cd22d3faa240cfb03288973ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016064426105999190611fc1565b815260200185815260200160018152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161061591906120e2565b6020604051808303816000875af1158015610634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106589190612113565b9150838373ffffffffffffffffffffffffffffffffffffffff167fc75ebe7f3b3e0093994e84fcb05aaa2d89a0691c8a7014066555ec45dfe2def8336040516106a191906119e3565b60405180910390a35092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610767576040517fefc60c1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107b69190612140565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516107e3906121a5565b60006040518083038185875af1925050503d8060008114610820576040519150601f19603f3d011682016040523d82523d6000602084013e610825565b606091505b5050905080610869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086090612206565b60405180910390fd5b5050565b600060606001915060006108a8858060c0019061088a9190612235565b600181811061089c5761089b612298565b5b90506020020135610bb8565b905060006108dd868060c001906108bf9190612235565b60028181106108d1576108d0612298565b5b905060200201356110c3565b905081816040516020016108f29291906122c7565b604051602081830303815290604052925050509250929050565b600080838381019061091e919061232e565b9150915061092c8282610bc5565b50505050565b60003411610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c906123ba565b60405180910390fd5b60006032426109849190611fc1565b90506000739c3c9283d3e44854697cd22d3faa240cfb032889905060008390506000610bb89050600033905060003490506000600190506000806040518061010001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018762ffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf38934836040518363ffffffff1660e01b8152600401610aa591906120e2565b60206040518083038185885af1158015610ac3573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ae89190612113565b5073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b4557600080fd5b505af1158015610b59573d6000803e3d6000fd5b50505050348a73ffffffffffffffffffffffffffffffffffffffff167fd470f59560d5b45ea0e51e4dc74de5a1ff0f31aab9c9d47567698dc5c2f894cc33604051610ba491906119e3565b60405180910390a350505050505050505050565b60008160001c9050919050565b6000610bd082611447565b90506000610bdd83611529565b905060008260ff1684610bf091906123da565b905060008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c2d91906119e3565b602060405180830381865afa158015610c4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6e9190612113565b9050610c7a86866116c7565b5060008673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610cb691906119e3565b602060405180830381865afa158015610cd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf79190612113565b905060008282610d079190612140565b905060008114610e615760008660ff1682610d22919061244b565b905060005b8760ff168160ff161015610e1f5760008a73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb898460ff1681518110610d6957610d68612298565b5b6020026020010151856040518363ffffffff1660e01b8152600401610d8f9291906122c7565b6020604051808303816000875af1158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd291906124a8565b905080610e0b576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508080610e17906124d5565b915050610d27565b507f83a3d3e7cfa42df27614a0bcccd126f7de7e99e2371f61d7a27ff6569b67c1938583838a8a604051610e579594939291906125ad565b60405180910390a1505b5050505050505050565b73e592427a0aece92de3edee1f18e0157c0586156481565b60003403610ebd576040517fcf2458d200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f0c9190611fc1565b9250508190555060016000808282829054906101000a900460ff16610f319190612607565b92506101000a81548160ff021916908360ff1602179055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073b27308f9f90d607463bb33ea1bebb41c27ce5ab673ffffffffffffffffffffffffffffffffffffffff166330d07f2183739c3c9283d3e44854697cd22d3faa240cfb032889610bb88760006040518663ffffffff1660e01b815260040161101c9594939291906126b2565b6020604051808303816000875af115801561103b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105f9190612113565b905092915050565b73b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008160001c9050919050565b600073b27308f9f90d607463bb33ea1bebb41c27ce5ab673ffffffffffffffffffffffffffffffffffffffff166330d07f2183739c3c9283d3e44854697cd22d3faa240cfb032889610bb88760006040518663ffffffff1660e01b815260040161113e9594939291906126b2565b6020604051808303816000875af115801561115d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111819190612113565b905092915050565b60008054906101000a900460ff1681565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b8686866040516024016111d193929190612705565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161123b919061276d565b6000604051808303816000865af19150503d8060008114611278576040519150601f19603f3d011682016040523d82523d6000602084013e61127d565b606091505b50915091508180156112ab57506000815114806112aa5750808060200190518101906112a991906124a8565b5b5b6112ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e1906127d0565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016113279291906122c7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611391919061276d565b6000604051808303816000865af19150503d80600081146113ce576040519150601f19603f3d011682016040523d82523d6000602084013e6113d3565b606091505b509150915081801561140157506000815114806114005750808060200190518101906113ff91906124a8565b5b5b611440576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114379061283c565b60405180910390fd5b5050505050565b60008060009054906101000a900460ff16905060005b60008054906101000a900460ff1660ff168160ff16101561152357826003600060018460ff168154811061149457611493612298565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156115105760018261150d919061285c565b91505b808061151b906124d5565b91505061145d565b50919050565b606061153482611447565b60ff1667ffffffffffffffff8111156115505761154f611a6b565b5b60405190808252806020026020018201604052801561157e5781602001602082028036833780820191505090505b50905060005b6001805490508160ff1610156116c157826003600060018460ff16815481106115b0576115af612298565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106116ae5760018160ff168154811061163257611631612298565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828260ff168151811061167357611672612298565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b80806116b9906124d5565b915050611584565b50919050565b600080604051806101000160405280739c3c9283d3e44854697cd22d3faa240cfb03288973ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020016032426117589190611fc1565b815260200184815260200160018152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf38984836040518363ffffffff1660e01b81526004016117d591906120e2565b60206040518083038185885af11580156117f3573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906118189190612113565b915073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561187657600080fd5b505af115801561188a573d6000803e3d6000fd5b505050505092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118d4826118a9565b9050919050565b6118e4816118c9565b81146118ef57600080fd5b50565b600081359050611901816118db565b92915050565b60006020828403121561191d5761191c61189f565b5b600061192b848285016118f2565b91505092915050565b6000819050919050565b61194781611934565b82525050565b6000602082019050611962600083018461193e565b92915050565b61197181611934565b811461197c57600080fd5b50565b60008135905061198e81611968565b92915050565b600080604083850312156119ab576119aa61189f565b5b60006119b98582860161197f565b92505060206119ca858286016118f2565b9150509250929050565b6119dd816118c9565b82525050565b60006020820190506119f860008301846119d4565b92915050565b600060208284031215611a1457611a1361189f565b5b6000611a228482850161197f565b91505092915050565b600080fd5b60006101008284031215611a4757611a46611a2b565b5b81905092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611aa382611a5a565b810181811067ffffffffffffffff82111715611ac257611ac1611a6b565b5b80604052505050565b6000611ad5611895565b9050611ae18282611a9a565b919050565b600067ffffffffffffffff821115611b0157611b00611a6b565b5b611b0a82611a5a565b9050602081019050919050565b82818337600083830152505050565b6000611b39611b3484611ae6565b611acb565b905082815260208101848484011115611b5557611b54611a55565b5b611b60848285611b17565b509392505050565b600082601f830112611b7d57611b7c611a50565b5b8135611b8d848260208601611b26565b91505092915050565b60008060408385031215611bad57611bac61189f565b5b600083013567ffffffffffffffff811115611bcb57611bca6118a4565b5b611bd785828601611a30565b925050602083013567ffffffffffffffff811115611bf857611bf76118a4565b5b611c0485828601611b68565b9150509250929050565b60008115159050919050565b611c2381611c0e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c63578082015181840152602081019050611c48565b60008484015250505050565b6000611c7a82611c29565b611c848185611c34565b9350611c94818560208601611c45565b611c9d81611a5a565b840191505092915050565b6000604082019050611cbd6000830185611c1a565b8181036020830152611ccf8184611c6f565b90509392505050565b600080fd5b600080fd5b60008083601f840112611cf857611cf7611a50565b5b8235905067ffffffffffffffff811115611d1557611d14611cd8565b5b602083019150836001820283011115611d3157611d30611cdd565b5b9250929050565b60008060208385031215611d4f57611d4e61189f565b5b600083013567ffffffffffffffff811115611d6d57611d6c6118a4565b5b611d7985828601611ce2565b92509250509250929050565b6000819050919050565b611d9881611d85565b8114611da357600080fd5b50565b600081359050611db581611d8f565b92915050565b600060208284031215611dd157611dd061189f565b5b6000611ddf84828501611da6565b91505092915050565b60008060408385031215611dff57611dfe61189f565b5b6000611e0d858286016118f2565b9250506020611e1e8582860161197f565b9150509250929050565b6000819050919050565b6000611e4d611e48611e43846118a9565b611e28565b6118a9565b9050919050565b6000611e5f82611e32565b9050919050565b6000611e7182611e54565b9050919050565b611e8181611e66565b82525050565b6000602082019050611e9c6000830184611e78565b92915050565b6000611ead82611e54565b9050919050565b611ebd81611ea2565b82525050565b6000602082019050611ed86000830184611eb4565b92915050565b600060ff82169050919050565b611ef481611ede565b82525050565b6000602082019050611f0f6000830184611eeb565b92915050565b600082825260208201905092915050565b7f43616e6e6f7420636f6e76657274203020546f6b656e73000000000000000000600082015250565b6000611f5c601783611f15565b9150611f6782611f26565b602082019050919050565b60006020820190508181036000830152611f8b81611f4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611fcc82611934565b9150611fd783611934565b9250828201905080821115611fef57611fee611f92565b5b92915050565b611ffe816118c9565b82525050565b600062ffffff82169050919050565b61201c81612004565b82525050565b61202b81611934565b82525050565b61203a816118a9565b82525050565b610100820160008201516120576000850182611ff5565b50602082015161206a6020850182611ff5565b50604082015161207d6040850182612013565b5060608201516120906060850182611ff5565b5060808201516120a36080850182612022565b5060a08201516120b660a0850182612022565b5060c08201516120c960c0850182612022565b5060e08201516120dc60e0850182612031565b50505050565b6000610100820190506120f86000830184612040565b92915050565b60008151905061210d81611968565b92915050565b6000602082840312156121295761212861189f565b5b6000612137848285016120fe565b91505092915050565b600061214b82611934565b915061215683611934565b925082820390508181111561216e5761216d611f92565b5b92915050565b600081905092915050565b50565b600061218f600083612174565b915061219a8261217f565b600082019050919050565b60006121b082612182565b9150819050919050565b7f5769746864726177204661696c65640000000000000000000000000000000000600082015250565b60006121f0600f83611f15565b91506121fb826121ba565b602082019050919050565b6000602082019050818103600083015261221f816121e3565b9050919050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261225257612251612226565b5b80840192508235915067ffffffffffffffff8211156122745761227361222b565b5b6020830192506020820236038313156122905761228f612230565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190506122dc60008301856119d4565b6122e9602083018461193e565b9392505050565b60006122fb826118a9565b9050919050565b61230b816122f0565b811461231657600080fd5b50565b60008135905061232881612302565b92915050565b600080604083850312156123455761234461189f565b5b600061235385828601612319565b92505060206123648582860161197f565b9150509250929050565b7f4d7573742070617373206e6f6e2030204d4154494320616d6f756e7400000000600082015250565b60006123a4601c83611f15565b91506123af8261236e565b602082019050919050565b600060208201905081810360008301526123d381612397565b9050919050565b60006123e582611934565b91506123f083611934565b92508282026123fe81611934565b9150828204841483151761241557612414611f92565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061245682611934565b915061246183611934565b9250826124715761247061241c565b5b828204905092915050565b61248581611c0e565b811461249057600080fd5b50565b6000815190506124a28161247c565b92915050565b6000602082840312156124be576124bd61189f565b5b60006124cc84828501612493565b91505092915050565b60006124e082611ede565b915060ff82036124f3576124f2611f92565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006125368383611ff5565b60208301905092915050565b6000602082019050919050565b600061255a826124fe565b6125648185612509565b935061256f8361251a565b8060005b838110156125a0578151612587888261252a565b975061259283612542565b925050600181019050612573565b5085935050505092915050565b600060a0820190506125c2600083018861193e565b6125cf602083018761193e565b6125dc604083018661193e565b6125e96060830185611eeb565b81810360808301526125fb818461254f565b90509695505050505050565b600061261282611ede565b915061261d83611ede565b9250828201905060ff81111561263657612635611f92565b5b92915050565b6000819050919050565b600061266161265c6126578461263c565b611e28565b612004565b9050919050565b61267181612646565b82525050565b6000819050919050565b600061269c61269761269284612677565b611e28565b6118a9565b9050919050565b6126ac81612681565b82525050565b600060a0820190506126c760008301886119d4565b6126d460208301876119d4565b6126e16040830186612668565b6126ee606083018561193e565b6126fb60808301846126a3565b9695505050505050565b600060608201905061271a60008301866119d4565b61272760208301856119d4565b612734604083018461193e565b949350505050565b600061274782611c29565b6127518185612174565b9350612761818560208601611c45565b80840191505092915050565b6000612779828461273c565b915081905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b60006127ba600383611f15565b91506127c582612784565b602082019050919050565b600060208201905081810360008301526127e9816127ad565b9050919050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b6000612826600283611f15565b9150612831826127f0565b602082019050919050565b6000602082019050818103600083015261285581612819565b9050919050565b600061286782611ede565b915061287283611ede565b9250828203905060ff81111561288b5761288a611f92565b5b9291505056fea26469706673582212200885d872f0c38fe6f722a01ff58644b7560c1af5cc627c65c13bcf44f5d1d32564736f6c63430008130033";

type CTMaticContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CTMaticContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CTMaticContract__factory extends ContractFactory {
  constructor(...args: CTMaticContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CTMaticContract> {
    return super.deploy(overrides || {}) as Promise<CTMaticContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CTMaticContract {
    return super.attach(address) as CTMaticContract;
  }
  override connect(signer: Signer): CTMaticContract__factory {
    return super.connect(signer) as CTMaticContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTMaticContractInterface {
    return new utils.Interface(_abi) as CTMaticContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CTMaticContract {
    return new Contract(address, _abi, signerOrProvider) as CTMaticContract;
  }
}
