/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CTMaticContract,
  CTMaticContractInterface,
} from "../../../contracts/MumbaiCTcontract.sol/CTMaticContract";

const _abi = [
  {
    inputs: [],
    name: "Insufficient_Balance",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Zero_Amount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "BuyOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "SellOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "receivedTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensToDistributePerUser",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "fundedSubscriberCount",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "fundedSubscribers",
        type: "address[]",
      },
    ],
    name: "logDisperce",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_address",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_amount",
        type: "bytes32",
      },
    ],
    name: "bytes32ToUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "source",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Log",
        name: "log",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkLog",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
    ],
    name: "convertExactMaticToToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "convertTokenToMatic",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "estimateMaticforToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "MaticAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "estimateTokenForMatic",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeTradeAndDisperce",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "quoter",
    outputs: [
      {
        internalType: "contract IQuoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscribe",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriberCount",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
    ],
    name: "swapExactMaticToToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "swapTokenToMatic",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611c108061007e6000396000f3fe60806040526004361061012e5760003560e01c8063715018a6116100ab578063b6af99191161006f578063b6af991914610318578063c6bbd5a71461032b578063ddcd522014610353578063e95ca45714610305578063ef352bbe1461036e578063f2fde38b146103a157600080fd5b8063715018a6146102a2578063735de9f7146102b75780638da5cb5b146102df5780638f449a05146102fd578063af84ac821461030557600080fd5b806340691db4116100f257806340691db4146101f85780634585e33b14610226578063500006b5146102465780635ced058e1461025957806363e3e9191461028f57600080fd5b80630103c92b1461013a57806301a1ef861461018357806327e235e3146101965780632e1a7d4d146101c35780633083e432146101e557600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061017061015536600461171e565b6001600160a01b031660009081526002602052604090205490565b6040519081526020015b60405180910390f35b610170610191366004611742565b6103c1565b3480156101a257600080fd5b506101706101b136600461171e565b60026020526000908152604090205481565b3480156101cf57600080fd5b506101e36101de366004611772565b610589565b005b6101e36101f336600461171e565b61066b565b34801561020457600080fd5b506102186102133660046117a1565b61082b565b60405161017a9291906118a4565b34801561023257600080fd5b506101e36102413660046118e0565b6108ba565b6101e361025436600461171e565b6108dd565b34801561026557600080fd5b50610277610274366004611772565b90565b6040516001600160a01b03909116815260200161017a565b6101e361029d366004611952565b610ae5565b3480156102ae57600080fd5b506101e3610da6565b3480156102c357600080fd5b5061027773e592427a0aece92de3edee1f18e0157c0586156481565b3480156102eb57600080fd5b506000546001600160a01b0316610277565b6101e3610dba565b610170610313366004611742565b610e7f565b610170610326366004611742565b610f39565b34801561033757600080fd5b5061027773b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b34801561035f57600080fd5b50610170610274366004611772565b34801561037a57600080fd5b5060005461038f90600160a01b900460ff1681565b60405160ff909116815260200161017a565b3480156103ad57600080fd5b506101e36103bc36600461171e565b6110ba565b60006103cb611133565b6000831161041a5760405162461bcd60e51b815260206004820152601760248201527643616e6e6f7420636f6e76657274203020546f6b656e7360481b60448201526064015b60405180910390fd5b6104268233308661118d565b6104458273e592427a0aece92de3edee1f18e0157c0586156485611297565b60408051610100810182526001600160a01b0384168152739c3c9283d3e44854697cd22d3faa240cfb0328896020820152610bb89181019190915233606082015260009060808101610498426064611994565b81526020018581526020016000815260200160006001600160a01b0316815250905073e592427a0aece92de3edee1f18e0157c058615646001600160a01b031663414bf3896000836040518363ffffffff1660e01b81526004016104fc91906119a7565b60206040518083038185885af115801561051a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061053f9190611a10565b60405133815290925084906001600160a01b038516907fc75ebe7f3b3e0093994e84fcb05aaa2d89a0691c8a7014066555ec45dfe2def89060200160405180910390a35092915050565b336000908152600260205260409020548111156105b957604051633bf1830560e21b815260040160405180910390fd5b33600090815260026020526040812080548392906105d8908490611a29565b9091555050604051600090339083908381818185875af1925050503d806000811461061f576040519150601f19603f3d011682016040523d82523d6000602084013e610624565b606091505b50509050806106675760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc811985a5b1959608a1b6044820152606401610411565b5050565b600034116106bb5760405162461bcd60e51b815260206004820152601c60248201527f4d7573742070617373206e6f6e2030204d4154494320616d6f756e74000000006044820152606401610411565b60006106c8426032611994565b6040805161010081018252739c3c9283d3e44854697cd22d3faa240cfb0328898082526001600160a01b0386166020830152610bb88284018190523360608401819052608084018690523460a08501819052600160c08601819052600060e08701819052965163414bf38960e01b81529798509396899693959294919391929073e592427a0aece92de3edee1f18e0157c058615649063414bf3899086906107749085906004016119a7565b60206040518083038185885af1158015610792573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107b79190611a10565b5073e592427a0aece92de3edee1f18e0157c058615646001600160a01b03166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561080757600080fd5b505af115801561081b573d6000803e3d6000fd5b5050505050505050505050505050565b60016060600061085c61084160c0870187611a3c565b600181811061085257610852611a8d565b9050602002013590565b9050600061088161087060c0880188611a3c565b600281811061085257610852611a8d565b604080516001600160a01b0385166020820152908101829052909150606001604051602081830303815290604052925050509250929050565b6000806108c983850185611952565b915091506108d78282610ae5565b50505050565b6108e5611133565b600034116109355760405162461bcd60e51b815260206004820152601c60248201527f4d7573742070617373206e6f6e2030204d4154494320616d6f756e74000000006044820152606401610411565b6000610942426032611994565b6040805161010081018252739c3c9283d3e44854697cd22d3faa240cfb0328898082526001600160a01b0386166020830152610bb88284018190523360608401819052608084018690523460a08501819052600160c08601819052600060e08701819052965163414bf38960e01b81529798509396899693959294919391929073e592427a0aece92de3edee1f18e0157c058615649063414bf3899086906109ee9085906004016119a7565b60206040518083038185885af1158015610a0c573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a319190611a10565b5073e592427a0aece92de3edee1f18e0157c058615646001600160a01b03166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a8157600080fd5b505af1158015610a95573d6000803e3d6000fd5b50506040513381523492506001600160a01b038d1691507fd470f59560d5b45ea0e51e4dc74de5a1ff0f31aab9c9d47567698dc5c2f894cc9060200160405180910390a350505050505050505050565b6000610af082611397565b90506000610afd8361142b565b90506000610b0e60ff841685611aa3565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c9190611a10565b9050610b88868661154e565b506040516370a0823160e01b81523060048201526000906001600160a01b038816906370a0823190602401602060405180830381865afa158015610bd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf49190611a10565b90506000610c028383611a29565b90508015610d9c576000610c1960ff881683611aba565b905060005b8760ff168160ff161015610d5a5760008a6001600160a01b031663a9059cbb898460ff1681518110610c5257610c52611a8d565b6020026020010151856040518363ffffffff1660e01b8152600401610c8c9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf9190611adc565b905080610cef576040516312171d8360e31b815260040160405180910390fd5b89600260008a8560ff1681518110610d0957610d09611a8d565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254610d409190611a29565b90915550829150610d52905081611afe565b915050610c1e565b507f83a3d3e7cfa42df27614a0bcccd126f7de7e99e2371f61d7a27ff6569b67c1938583838a8a604051610d92959493929190611b1d565b60405180910390a1505b5050505050505050565b610dae611133565b610db860006116b9565b565b34600003610ddb576040516367922c6960e11b815260040160405180910390fd5b3360009081526002602052604081208054349290610dfa908490611994565b90915550506000805460019190601490610e1f908490600160a01b900460ff16611b8c565b825460ff9182166101009390930a9283029190920219909116179055506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055565b6040516330d07f2160e01b81526001600160a01b0382166004820152739c3c9283d3e44854697cd22d3faa240cfb0328896024820152610bb86044820152606481018390526000608482018190529073b27308f9f90d607463bb33ea1bebb41c27ce5ab6906330d07f219060a4016020604051808303816000875af1158015610f0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f309190611a10565b90505b92915050565b6000610f43611133565b60008311610f8d5760405162461bcd60e51b815260206004820152601760248201527643616e6e6f7420636f6e76657274203020546f6b656e7360481b6044820152606401610411565b610f998233308661118d565b610fb88273e592427a0aece92de3edee1f18e0157c0586156485611297565b60408051610100810182526001600160a01b0384168152739c3c9283d3e44854697cd22d3faa240cfb0328896020820152610bb8918101919091523360608201526000906080810161100b426064611994565b81526020018581526020016000815260200160006001600160a01b0316815250905073e592427a0aece92de3edee1f18e0157c058615646001600160a01b031663414bf3896000836040518363ffffffff1660e01b815260040161106f91906119a7565b60206040518083038185885af115801561108d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110b29190611a10565b949350505050565b6110c2611133565b6001600160a01b0381166111275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610411565b611130816116b9565b50565b6000546001600160a01b03163314610db85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610411565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916111f19190611ba5565b6000604051808303816000865af19150503d806000811461122e576040519150601f19603f3d011682016040523d82523d6000602084013e611233565b606091505b509150915081801561125d57508051158061125d57508080602001905181019061125d9190611adc565b61128f5760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b6044820152606401610411565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291516000928392908716916112f39190611ba5565b6000604051808303816000865af19150503d8060008114611330576040519150601f19603f3d011682016040523d82523d6000602084013e611335565b606091505b509150915081801561135f57508051158061135f57508080602001905181019061135f9190611adc565b6113905760405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606401610411565b5050505050565b60008054600160a01b900460ff16905b60005460ff600160a01b9091048116908216101561142557826002600060018460ff16815481106113da576113da611a8d565b60009182526020808320909101546001600160a01b03168352820192909252604001902054101561141357611410600183611bc1565b91505b8061141d81611afe565b9150506113a7565b50919050565b606061143682611397565b60ff1667ffffffffffffffff8111156114515761145161178b565b60405190808252806020026020018201604052801561147a578160200160208202803683370190505b50905060005b60015460ff8216101561142557826002600060018460ff16815481106114a8576114a8611a8d565b60009182526020808320909101546001600160a01b031683528201929092526040019020541061153c5760018160ff16815481106114e8576114e8611a8d565b9060005260206000200160009054906101000a90046001600160a01b0316828260ff168151811061151b5761151b611a8d565b60200260200101906001600160a01b031690816001600160a01b0316815250505b8061154681611afe565b915050611480565b6040805161010081018252739c3c9283d3e44854697cd22d3faa240cfb03288981526001600160a01b0384166020820152610bb8918101919091523060608201526000908190608081016115a3426032611994565b81526020018481526020016001815260200160006001600160a01b0316815250905073e592427a0aece92de3edee1f18e0157c058615646001600160a01b031663414bf38984836040518363ffffffff1660e01b815260040161160691906119a7565b60206040518083038185885af1158015611624573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906116499190611a10565b915073e592427a0aece92de3edee1f18e0157c058615646001600160a01b03166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561169a57600080fd5b505af11580156116ae573d6000803e3d6000fd5b505050505092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461113057600080fd5b60006020828403121561173057600080fd5b813561173b81611709565b9392505050565b6000806040838503121561175557600080fd5b82359150602083013561176781611709565b809150509250929050565b60006020828403121561178457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156117b457600080fd5b823567ffffffffffffffff808211156117cc57600080fd5b9084019061010082870312156117e157600080fd5b909250602084013590808211156117f757600080fd5b818501915085601f83011261180b57600080fd5b81358181111561181d5761181d61178b565b604051601f8201601f19908116603f011681019083821181831017156118455761184561178b565b8160405282815288602084870101111561185e57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b8381101561189b578181015183820152602001611883565b50506000910152565b821515815260406020820152600082518060408401526118cb816060850160208701611880565b601f01601f1916919091016060019392505050565b600080602083850312156118f357600080fd5b823567ffffffffffffffff8082111561190b57600080fd5b818501915085601f83011261191f57600080fd5b81358181111561192e57600080fd5b86602082850101111561194057600080fd5b60209290920196919550909350505050565b6000806040838503121561196557600080fd5b823561197081611709565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f3357610f3361197e565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b600060208284031215611a2257600080fd5b5051919050565b81810381811115610f3357610f3361197e565b6000808335601e19843603018112611a5357600080fd5b83018035915067ffffffffffffffff821115611a6e57600080fd5b6020019150600581901b3603821315611a8657600080fd5b9250929050565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610f3357610f3361197e565b600082611ad757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611aee57600080fd5b8151801515811461173b57600080fd5b600060ff821660ff8103611b1457611b1461197e565b60010192915050565b600060a082018783526020878185015286604085015260ff8616606085015260a0608085015281855180845260c086019150828701935060005b81811015611b7c5784516001600160a01b031683529383019391830191600101611b57565b50909a9950505050505050505050565b60ff8181168382160190811115610f3357610f3361197e565b60008251611bb7818460208701611880565b9190910192915050565b60ff8281168282160390811115610f3357610f3361197e56fea26469706673582212207cdf097d8e18218cd0a3e4f65e33db043eb7583f27aed9f8bc8c06ca4f09913164736f6c63430008130033";

type CTMaticContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CTMaticContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CTMaticContract__factory extends ContractFactory {
  constructor(...args: CTMaticContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CTMaticContract> {
    return super.deploy(overrides || {}) as Promise<CTMaticContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CTMaticContract {
    return super.attach(address) as CTMaticContract;
  }
  override connect(signer: Signer): CTMaticContract__factory {
    return super.connect(signer) as CTMaticContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTMaticContractInterface {
    return new utils.Interface(_abi) as CTMaticContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CTMaticContract {
    return new Contract(address, _abi, signerOrProvider) as CTMaticContract;
  }
}
